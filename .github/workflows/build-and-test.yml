name: 'Build and Test'

on:
  push:
    branches: [ main, stable, oldstable ]
  pull_request:
    branches: [ main, stable, oldstable ]

jobs:
  check-format:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Check out gvmd
        uses: actions/checkout@v2
      - name: Check Source Format
        run: |
          clang-format -i -style=file src/gmp_{base,delete,get,tickets}.h \
          src/{gmp,gmpd,iterator,sql,types,utils,manage_utils}.h
          git diff --exit-code

  generate-doc-and-upload-coverage:
    name: Build XML documentation and upload coverage
    runs-on: ubuntu-latest
    container: greenbone/doxygen
    steps:
      - name: Run the c lang coverage action
        uses: greenbone/actions/doc-coverage-clang@v1

  build-gmp-doc:
    name: Build GMP documentation
    runs-on: ubuntu-latest
    container: greenbone/gvmd-clang-build:stable
    steps:
      - name: Check out gvmd
        uses: actions/checkout@v2
      - name: Generate GMP documentation (HTML)
        run: |
          mkdir build
          cd build
          cmake -DSKIP_SRC=1 ..
          make doc-gmp
      # We do not use this upload ...
      # - name: Upload GMP documentation artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: gmp.html
      #     path: build/doc/gmp.html

  scan-build:
    name: scan-build (clang static analyzer)
    runs-on: ubuntu-latest
    container: greenbone/gvmd-clang-build:stable
    steps:
      - name: Check out gvmd
        uses: actions/checkout@v2
      - name: Configure scan build
        run: |
          scan-build cmake -B build -DCMAKE_BUILD_TYPE=Debug
          scan-build -o ~/scan-build-report cmake --build build
      # We do not use this upload ...
      # - name: Upload scan-build report
      #   if: failure()
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: scan-build-report
      #     path: ~/scan-build-report/

  test-units:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler:
          - gcc
          - clang
    container: greenbone/gvmd-${{ matrix.compiler }}-build:stable
    steps:
      - name: Check out gvmd
        uses: actions/checkout@v2
      - name: Build gvmd with ${{ matrix.compiler }}
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=1
          cmake --build build
      - name: Configure and run tests
        run: CTEST_OUTPUT_ON_FAILURE=1 cmake --build build -- tests test
